{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Raian/Documents/raian-dev/Vegan-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Raian/Documents/raian-dev/Vegan-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Raian/Documents/raian-dev/Vegan-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"./settings\";\nvar URLS = {\n  USERS: BASE_URL + \"users\"\n};\n\nvar CategoryService = function CategoryService() {\n  _classCallCheck(this, CategoryService);\n};\n\nCategoryService.getUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(token) {\n    var config, _ref2, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.get(URLS.USERS, config);\n\n          case 4:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 12:\n            _context.prev = 12;\n            return _context.finish(12);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9, 12, 14]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nCategoryService.getUser =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(id, token) {\n    var config, url, _ref4, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            config = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            url = URLS.USERS + \"/\" + id;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return axios.get(url, config);\n\n          case 5:\n            _ref4 = _context2.sent;\n            data = _ref4.data;\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](2);\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 13:\n            _context2.prev = 13;\n            return _context2.finish(13);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 10, 13, 15]]);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport { CategoryService as default };","map":{"version":3,"sources":["/Users/Raian/Documents/raian-dev/Vegan-FrontEnd/src/services/UserService.js"],"names":["axios","BASE_URL","URLS","USERS","CategoryService","getUsers","token","config","headers","Authorization","get","data","getUser","id","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAEF,QAAQ,GAAG;AADP,CAAb;;IAIqBG,e;;;;AAAAA,e,CACZC,Q;;;;;2BAAW,iBAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,MADY,GACH;AACXC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYH,KAAZ;AADN;AADE,aADG;AAAA;AAAA;AAAA,mBAOSN,KAAK,CAACU,GAAN,CAAUR,IAAI,CAACC,KAAf,EAAsBI,MAAtB,CAPT;;AAAA;AAAA;AAONI,YAAAA,IAPM,SAONA,IAPM;AAAA,6CAQPA,IARO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;;;;AADCP,e,CAiBZQ,O;;;;;2BAAU,kBAAOC,EAAP,EAAWP,KAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,MADW,GACF;AACXC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYH,KAAZ;AADN;AADE,aADE;AAMXQ,YAAAA,GANW,GAMLZ,IAAI,CAACC,KAAL,GAAa,GAAb,GAAmBU,EANd;AAAA;AAAA;AAAA,mBAQUb,KAAK,CAACU,GAAN,CAAUI,GAAV,EAAeP,MAAf,CARV;;AAAA;AAAA;AAQLI,YAAAA,IARK,SAQLA,IARK;AAAA,8CASNA,IATM;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;;;;SAjBEP,e","sourcesContent":["import axios from \"axios\";\nimport { BASE_URL } from \"./settings\";\n\nconst URLS = {\n  USERS: BASE_URL + \"users\"\n};\n\nexport default class CategoryService {\n  static getUsers = async token => {\n    let config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      const { data } = await axios.get(URLS.USERS, config);\n      return data;\n    } catch (err) {\n      return err;\n    } finally {\n      // this.setState({ loading: false });\n    }\n  };\n\n  static getUser = async (id, token) => {\n    let config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    let url = URLS.USERS + \"/\" + id;\n    try {\n      const { data } = await axios.get(url, config);\n      return data;\n    } catch (err) {\n      return err;\n    } finally {\n      // this.setState({ loading: false });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}