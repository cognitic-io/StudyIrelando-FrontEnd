{"ast":null,"code":"import _objectWithoutProperties from \"/Users/Raian/Documents/raian-dev/Vegan-FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/Raian/Documents/raian-dev/Vegan-FrontEnd/src/routes.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport { isUserAuthenticated, getLoggedInUser } from \"./helpers/authUtils\"; // lazy load all the views\n\nvar Dashboard = React.lazy(function () {\n  return import(\"./pages/dashboards/\");\n});\nvar CategoryAdd = React.lazy(function () {\n  return import(\"./pages/categories/CategoryAdd\");\n});\nvar CategoryEdit = React.lazy(function () {\n  return import(\"./pages/categories/CategoryEdit\");\n});\nvar CategoryContainer = React.lazy(function () {\n  return import(\"./pages/categories/CategoryContainer\");\n});\nvar CategoryPendings = React.lazy(function () {\n  return import(\"./pages/categories/CategoryPendings\");\n});\nvar ServiceTypeAdd = React.lazy(function () {\n  return import(\"./pages/service-type/ServiceTypeAdd\");\n});\nvar ServiceTypeEdit = React.lazy(function () {\n  return import(\"./pages/service-type/ServiceTypeEdit\");\n});\nvar ServiceTypeContainer = React.lazy(function () {\n  return import(\"./pages/service-type/ServiceTypeContainer\");\n});\nvar ServiceAdd = React.lazy(function () {\n  return import(\"./pages/service/ServiceAdd\");\n});\nvar ServiceEdit = React.lazy(function () {\n  return import(\"./pages/service/ServiceEdit\");\n});\nvar ServiceContainer = React.lazy(function () {\n  return import(\"./pages/service/ServiceContainer\");\n});\nvar ServicePendings = React.lazy(function () {\n  return import(\"./pages/service/ServicePendings\");\n});\nvar ProductContainer = React.lazy(function () {\n  return import(\"./pages/product/ProductContainer\");\n});\nvar ProductDetails = React.lazy(function () {\n  return import(\"./pages/product/ProductDetails\");\n});\nvar ProductFlagged = React.lazy(function () {\n  return import(\"./pages/product/ProductFlagged\");\n});\nvar UserContainer = React.lazy(function () {\n  return import(\"./pages/user/UserContainer\");\n});\nvar UserDetails = React.lazy(function () {\n  return import(\"./pages/user/UserDetails\");\n}); // auth\n\nvar Login = React.lazy(function () {\n  return import(\"./pages/auth/Login\");\n});\nvar Logout = React.lazy(function () {\n  return import(\"./pages/auth/Logout\");\n});\nvar ForgetPassword = React.lazy(function () {\n  return import(\"./pages/account/ForgetPassword\");\n});\nvar Register = React.lazy(function () {\n  return import(\"./pages/account/Register\");\n});\nvar ConfirmAccount = React.lazy(function () {\n  return import(\"./pages/account/Confirm\");\n}); // handle auth and authorization\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      roles = _ref.roles,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"roles\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      var isAuthTokenValid = isUserAuthenticated();\n\n      if (!isAuthTokenValid) {\n        // not logged in so redirect to login page with the return url\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }\n\n      var loggedInUser = getLoggedInUser(); // check if route is restricted by role\n\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      } // authorised so return component\n\n\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nvar routes = [// auth and account\n{\n  path: \"/login\",\n  name: \"Login\",\n  component: Login,\n  route: Route\n}, {\n  path: \"/logout\",\n  name: \"Logout\",\n  component: Logout,\n  route: Route\n}, {\n  path: \"/forget-password\",\n  name: \"Forget Password\",\n  component: ForgetPassword,\n  route: Route\n}, {\n  path: \"/register\",\n  name: \"Register\",\n  component: Register,\n  route: Route\n}, {\n  path: \"/confirm\",\n  name: \"Confirm\",\n  component: ConfirmAccount,\n  route: Route\n}, // other pages\n{\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  component: Dashboard,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/categories-list\",\n  name: \"Categories\",\n  component: CategoryContainer,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/categories-pendings\",\n  name: \"Categories pendings\",\n  component: CategoryPendings,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/categories-create\",\n  name: \"Categories - create\",\n  component: CategoryAdd,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/categories/:id\",\n  name: \"Categories\",\n  component: CategoryEdit,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/service-types-list\",\n  name: \"Service types\",\n  component: ServiceTypeContainer,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/service-types-create\",\n  name: \"Service types - create\",\n  component: ServiceTypeAdd,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/service-types/:id\",\n  name: \"Service types\",\n  component: ServiceTypeEdit,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/service-list\",\n  name: \"Services\",\n  component: ServiceContainer,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/service-pendings\",\n  name: \"Services\",\n  component: ServicePendings,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/service-create\",\n  name: \"Service - create\",\n  component: ServiceAdd,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/service/:id\",\n  name: \"Service\",\n  component: ServiceEdit,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/product-list\",\n  name: \"Products\",\n  component: ProductContainer,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/product/:id\",\n  name: \"Product\",\n  component: ProductDetails,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/product-flagged\",\n  name: \"Products\",\n  component: ProductFlagged,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/\",\n  exact: true,\n  component: function component() {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    });\n  },\n  route: PrivateRoute\n}, {\n  path: \"/users\",\n  exact: true,\n  name: \"Users\",\n  component: UserContainer,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}, {\n  path: \"/users/:id\",\n  name: \"Users details\",\n  component: UserDetails,\n  route: PrivateRoute,\n  roles: [\"Admin\"]\n}];\nexport { routes, PrivateRoute };","map":{"version":3,"sources":["/Users/Raian/Documents/raian-dev/Vegan-FrontEnd/src/routes.js"],"names":["React","Redirect","Route","isUserAuthenticated","getLoggedInUser","Dashboard","lazy","CategoryAdd","CategoryEdit","CategoryContainer","CategoryPendings","ServiceTypeAdd","ServiceTypeEdit","ServiceTypeContainer","ServiceAdd","ServiceEdit","ServiceContainer","ServicePendings","ProductContainer","ProductDetails","ProductFlagged","UserContainer","UserDetails","Login","Logout","ForgetPassword","Register","ConfirmAccount","PrivateRoute","Component","component","roles","rest","props","isAuthTokenValid","pathname","state","from","location","loggedInUser","indexOf","role","routes","path","name","route","exact"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\nimport { isUserAuthenticated, getLoggedInUser } from \"./helpers/authUtils\";\n\n// lazy load all the views\nconst Dashboard = React.lazy(() => import(\"./pages/dashboards/\"));\nconst CategoryAdd = React.lazy(() => import(\"./pages/categories/CategoryAdd\"));\nconst CategoryEdit = React.lazy(() =>\n  import(\"./pages/categories/CategoryEdit\")\n);\nconst CategoryContainer = React.lazy(() =>\n  import(\"./pages/categories/CategoryContainer\")\n);\nconst CategoryPendings = React.lazy(() =>\n  import(\"./pages/categories/CategoryPendings\")\n);\nconst ServiceTypeAdd = React.lazy(() =>\n  import(\"./pages/service-type/ServiceTypeAdd\")\n);\nconst ServiceTypeEdit = React.lazy(() =>\n  import(\"./pages/service-type/ServiceTypeEdit\")\n);\nconst ServiceTypeContainer = React.lazy(() =>\n  import(\"./pages/service-type/ServiceTypeContainer\")\n);\nconst ServiceAdd = React.lazy(() => import(\"./pages/service/ServiceAdd\"));\nconst ServiceEdit = React.lazy(() => import(\"./pages/service/ServiceEdit\"));\nconst ServiceContainer = React.lazy(() =>\n  import(\"./pages/service/ServiceContainer\")\n);\nconst ServicePendings = React.lazy(() =>\n  import(\"./pages/service/ServicePendings\")\n);\nconst ProductContainer = React.lazy(() =>\n  import(\"./pages/product/ProductContainer\")\n);\nconst ProductDetails = React.lazy(() =>\n  import(\"./pages/product/ProductDetails\")\n);\nconst ProductFlagged = React.lazy(() =>\n  import(\"./pages/product/ProductFlagged\")\n);\nconst UserContainer = React.lazy(() => import(\"./pages/user/UserContainer\"));\nconst UserDetails = React.lazy(() => import(\"./pages/user/UserDetails\"));\n\n// auth\nconst Login = React.lazy(() => import(\"./pages/auth/Login\"));\nconst Logout = React.lazy(() => import(\"./pages/auth/Logout\"));\nconst ForgetPassword = React.lazy(() =>\n  import(\"./pages/account/ForgetPassword\")\n);\nconst Register = React.lazy(() => import(\"./pages/account/Register\"));\nconst ConfirmAccount = React.lazy(() => import(\"./pages/account/Confirm\"));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      const isAuthTokenValid = isUserAuthenticated();\n      if (!isAuthTokenValid) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      const loggedInUser = getLoggedInUser();\n      // check if route is restricted by role\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return <Redirect to={{ pathname: \"/\" }} />;\n      }\n\n      // authorised so return component\n      return <Component {...props} />;\n    }}\n  />\n);\n\nconst routes = [\n  // auth and account\n  { path: \"/login\", name: \"Login\", component: Login, route: Route },\n  { path: \"/logout\", name: \"Logout\", component: Logout, route: Route },\n  {\n    path: \"/forget-password\",\n    name: \"Forget Password\",\n    component: ForgetPassword,\n    route: Route\n  },\n  { path: \"/register\", name: \"Register\", component: Register, route: Route },\n  {\n    path: \"/confirm\",\n    name: \"Confirm\",\n    component: ConfirmAccount,\n    route: Route\n  },\n\n  // other pages\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    component: Dashboard,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/categories-list\",\n    name: \"Categories\",\n    component: CategoryContainer,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/categories-pendings\",\n    name: \"Categories pendings\",\n    component: CategoryPendings,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/categories-create\",\n    name: \"Categories - create\",\n    component: CategoryAdd,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/categories/:id\",\n    name: \"Categories\",\n    component: CategoryEdit,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/service-types-list\",\n    name: \"Service types\",\n    component: ServiceTypeContainer,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/service-types-create\",\n    name: \"Service types - create\",\n    component: ServiceTypeAdd,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/service-types/:id\",\n    name: \"Service types\",\n    component: ServiceTypeEdit,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/service-list\",\n    name: \"Services\",\n    component: ServiceContainer,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/service-pendings\",\n    name: \"Services\",\n    component: ServicePendings,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/service-create\",\n    name: \"Service - create\",\n    component: ServiceAdd,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/service/:id\",\n    name: \"Service\",\n    component: ServiceEdit,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/product-list\",\n    name: \"Products\",\n    component: ProductContainer,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/product/:id\",\n    name: \"Product\",\n    component: ProductDetails,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/product-flagged\",\n    name: \"Products\",\n    component: ProductFlagged,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/\",\n    exact: true,\n    component: () => <Redirect to=\"/dashboard\" />,\n    route: PrivateRoute\n  },\n  {\n    path: \"/users\",\n    exact: true,\n    name: \"Users\",\n    component: UserContainer,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  },\n  {\n    path: \"/users/:id\",\n    name: \"Users details\",\n    component: UserDetails,\n    route: PrivateRoute,\n    roles: [\"Admin\"]\n  }\n];\n\nexport { routes, PrivateRoute };\n"]},"metadata":{},"sourceType":"module"}